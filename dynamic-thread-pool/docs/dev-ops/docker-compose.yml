# 命令执行 docker-compose up -d
version: '3.9'
services:
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 16379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy

  admin:
    build:
      context: ../../dynamic-thread-pool-admin
      dockerfile: Dockerfile
    container_name: admin
    restart: always
    ports:
      - 8090:8090
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - my-network

  test:
    build:
      context: ../../dynamic-thread-pool-test
      dockerfile: Dockerfile
    container_name: test
    restart: always
    ports:
      - 8080:8080
    depends_on:
      redis:
        condition: service_healthy
      admin:
        condition: service_started
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      ADMIN_HOST: admin
      ADMIN_PORT: 8090
    networks:
      - my-network


networks:
  my-network:
    driver: bridge
